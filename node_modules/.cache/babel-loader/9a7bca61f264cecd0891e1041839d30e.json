{"ast":null,"code":"import { FETCH_POSTS, NEW_POST } from './types';\nexport var fetchPosts = function fetchPosts() {\n  return function (dispatch) {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(function (res) {\n      return res.json();\n    }).then(function (posts) {\n      return dispatch({\n        type: FETCH_POSTS,\n        payload: posts\n      });\n    });\n  };\n};\nexport var createPost = function createPost(postData) {\n  return function (dispatch) {\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(postData)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (post) {\n      return dispatch({\n        type: NEW_POST,\n        payload: post\n      });\n    });\n  };\n}; // //import ations constants here\n// import {FETCH_POSTS, NEW_POSTS} from './types';\n//\n// //the thunk middleware allowas us to call dispatch function directly, so that we can make asynchrounous calls directly\n// //dispatch as a resolve in promise\n// export const fetchPosts = () => dispatch => {\n//       //here we will create fetch request\n//       // console.log('fetching')\n//       fetch('https://jsonplaceholder.typicode.com/posts')\n//       .then(response => response.json())\n//       .then(posts =>\n//         dispatch({\n//           type: FETCH_POSTS,\n//           payload: posts\n//         })\n//       )\n// };\n//\n//\n// export const createPosts = postData => dispatch => {\n//       //here we will create fetch request\n//       // console.log(JSON.stringify(postData))\n//       fetch('https://jsonplaceholder.typicode.com/posts',{\n//         method: 'POST',\n//         header: {\n//           'content-type': 'application/json'\n//         },\n//         body: JSON.stringify(postData)\n//       })\n//       .then(res => res.json())\n//       .then(body =>\n//         console.log(body)\n//         // dispatch({\n//         //   type:NEW_POSTS,\n//         //   payload: post\n//         // })\n//       )\n// }\n//\n// //we dispatch the FETCH_POSTS to reducers i.e postReducer.js","map":{"version":3,"sources":["C:\\Users\\BAngadi\\Desktop\\react-redux\\test\\src\\actions\\postAction.js"],"names":["FETCH_POSTS","NEW_POST","fetchPosts","dispatch","fetch","then","res","json","posts","type","payload","createPost","postData","method","headers","body","JSON","stringify","post"],"mappings":"AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAC,QAAQ,EAAI;AAC1CC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADX,EAEGF,IAFH,CAEQ,UAAAG,KAAK;AAAA,aACTL,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAET,WADC;AAEPU,QAAAA,OAAO,EAAEF;AAFF,OAAD,CADC;AAAA,KAFb;AAQD,GATyB;AAAA,CAAnB;AAWP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAC,QAAQ;AAAA,SAAI,UAAAT,QAAQ,EAAI;AAChDC,IAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDS,MAAAA,MAAM,EAAE,MAD0C;AAElDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFyC;AAKlDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AAL4C,KAA/C,CAAL,CAOGP,IAPH,CAOQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAPX,EAQGF,IARH,CAQQ,UAAAa,IAAI;AAAA,aACRf,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAER,QADC;AAEPS,QAAAA,OAAO,EAAEQ;AAFF,OAAD,CADA;AAAA,KARZ;AAcD,GAfiC;AAAA,CAA3B,C,CAgBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport { FETCH_POSTS, NEW_POST } from './types';\r\n\r\nexport const fetchPosts = () => dispatch => {\r\n  fetch('https://jsonplaceholder.typicode.com/posts')\r\n    .then(res => res.json())\r\n    .then(posts =>\r\n      dispatch({\r\n        type: FETCH_POSTS,\r\n        payload: posts\r\n      })\r\n    );\r\n};\r\n\r\nexport const createPost = postData => dispatch => {\r\n  fetch('https://jsonplaceholder.typicode.com/posts', {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify(postData)\r\n  })\r\n    .then(res => res.json())\r\n    .then(post =>\r\n      dispatch({\r\n        type: NEW_POST,\r\n        payload: post\r\n      })\r\n    );\r\n};\r\n// //import ations constants here\r\n// import {FETCH_POSTS, NEW_POSTS} from './types';\r\n//\r\n// //the thunk middleware allowas us to call dispatch function directly, so that we can make asynchrounous calls directly\r\n// //dispatch as a resolve in promise\r\n// export const fetchPosts = () => dispatch => {\r\n//       //here we will create fetch request\r\n//       // console.log('fetching')\r\n//       fetch('https://jsonplaceholder.typicode.com/posts')\r\n//       .then(response => response.json())\r\n//       .then(posts =>\r\n//         dispatch({\r\n//           type: FETCH_POSTS,\r\n//           payload: posts\r\n//         })\r\n//       )\r\n// };\r\n//\r\n//\r\n// export const createPosts = postData => dispatch => {\r\n//       //here we will create fetch request\r\n//       // console.log(JSON.stringify(postData))\r\n//       fetch('https://jsonplaceholder.typicode.com/posts',{\r\n//         method: 'POST',\r\n//         header: {\r\n//           'content-type': 'application/json'\r\n//         },\r\n//         body: JSON.stringify(postData)\r\n//       })\r\n//       .then(res => res.json())\r\n//       .then(body =>\r\n//         console.log(body)\r\n//         // dispatch({\r\n//         //   type:NEW_POSTS,\r\n//         //   payload: post\r\n//         // })\r\n//       )\r\n// }\r\n//\r\n// //we dispatch the FETCH_POSTS to reducers i.e postReducer.js\r\n"]},"metadata":{},"sourceType":"module"}