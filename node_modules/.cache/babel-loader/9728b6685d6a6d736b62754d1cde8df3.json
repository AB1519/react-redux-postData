{"ast":null,"code":"//import ations constants here\nimport { FETCH_POSTS, NEW_POSTS } from './types'; //the thunk middleware allowas us to call dispatch function directly, so that we can make asynchrounous calls directly\n//dispatch as a resolve in promise\n\nexport var fetchPosts = function fetchPosts() {\n  return function (dispatch) {\n    //here we will create fetch request\n    // console.log('fetching')\n    fetch('https://jsonplaceholder.typicode.com/posts').then(function (response) {\n      return response.json();\n    }).then(function (posts) {\n      return dispatch({\n        type: FETCH_POSTS,\n        payload: posts\n      });\n    });\n  };\n};\nexport var createPosts = function createPosts(postData) {\n  return function (dispatch) {\n    //here we will create fetch request\n    // console.log(JSON.stringify(postData))\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(postData)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (post) {\n      return (// console.log(body)\n        dispatch({\n          type: NEW_POSTS,\n          payload: post\n        })\n      );\n    });\n  };\n}; //we dispatch the FETCH_POSTS to reducers i.e postReducer.js","map":{"version":3,"sources":["C:\\Users\\BAngadi\\Desktop\\react-redux\\test\\src\\actions\\postAction.js"],"names":["FETCH_POSTS","NEW_POSTS","fetchPosts","dispatch","fetch","then","response","json","posts","type","payload","createPosts","postData","method","headers","body","JSON","stringify","res","post"],"mappings":"AAAA;AACA,SAAQA,WAAR,EAAqBC,SAArB,QAAqC,SAArC,C,CAEA;AACA;;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACtC;AACA;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADd,EAECF,IAFD,CAEM,UAAAG,KAAK;AAAA,aACTL,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAET,WADC;AAEPU,QAAAA,OAAO,EAAEF;AAFF,OAAD,CADC;AAAA,KAFX;AAQL,GAXyB;AAAA,CAAnB;AAeP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ;AAAA,SAAI,UAAAT,QAAQ,EAAI;AAC7C;AACA;AACAC,IAAAA,KAAK,CAAC,4CAAD,EAA8C;AACjDS,MAAAA,MAAM,EAAE,MADyC;AAEjDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFwC;AAKjDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AAL2C,KAA9C,CAAL,CAOCP,IAPD,CAOM,UAAAa,GAAG;AAAA,aAAIA,GAAG,CAACX,IAAJ,EAAJ;AAAA,KAPT,EAQCF,IARD,CAQM,UAAAc,IAAI;AAAA,aACR;AACAhB,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAACR,SADE;AAEPS,UAAAA,OAAO,EAAES;AAFF,SAAD;AAFA;AAAA,KARV;AAeL,GAlBkC;AAAA,CAA5B,C,CAoBP","sourcesContent":["//import ations constants here\r\nimport {FETCH_POSTS, NEW_POSTS} from './types';\r\n\r\n//the thunk middleware allowas us to call dispatch function directly, so that we can make asynchrounous calls directly\r\n//dispatch as a resolve in promise\r\nexport const fetchPosts = () => dispatch => {\r\n      //here we will create fetch request\r\n      // console.log('fetching')\r\n      fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then(response => response.json())\r\n      .then(posts =>\r\n        dispatch({\r\n          type: FETCH_POSTS,\r\n          payload: posts\r\n        })\r\n      )\r\n};\r\n\r\n\r\n\r\nexport const createPosts = postData => dispatch => {\r\n      //here we will create fetch request\r\n      // console.log(JSON.stringify(postData))\r\n      fetch('https://jsonplaceholder.typicode.com/posts',{\r\n        method: 'POST',\r\n        headers: {\r\n          'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(postData)\r\n      })\r\n      .then(res => res.json())\r\n      .then(post =>\r\n        // console.log(body)\r\n        dispatch({\r\n          type:NEW_POSTS,\r\n          payload: post\r\n        })\r\n      )\r\n}\r\n\r\n//we dispatch the FETCH_POSTS to reducers i.e postReducer.js\r\n"]},"metadata":{},"sourceType":"module"}