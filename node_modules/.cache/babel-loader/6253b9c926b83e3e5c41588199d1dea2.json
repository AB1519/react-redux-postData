{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\BAngadi\\\\Desktop\\\\react-redux\\\\test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n//evaluate any actions that are commited.\n// action have type\n// step 8: creating reducers\n//step 9 --> goto actions/types\nimport { FETCH_POSTS, NEW_POSTS } from '../actions/types'; //create initial initialState\n//step 10: create initial state as an object\n\nvar initialState = {\n  items: [],\n  //repersnt post coming from action fetch actions\n  item: {} //represent the single post we add\n  //evaluate what type are we dealing iwth\n\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_POSTS:\n      return _objectSpread({}, state, {\n        items: action.payload\n      });\n\n    default:\n      return state;\n  }\n} //step 11: create postAction.js","map":{"version":3,"sources":["C:\\Users\\BAngadi\\Desktop\\react-redux\\test\\src\\reducers\\postReducer.js"],"names":["FETCH_POSTS","NEW_POSTS","initialState","items","item","state","action","type","payload"],"mappings":";AAAA;AACA;AACA;AACA;AAEA,SAAQA,WAAR,EAAqBC,SAArB,QAAqC,kBAArC,C,CAEA;AACA;;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAC,EADa;AACT;AACVC,EAAAA,IAAI,EAAC,EAFc,CAEX;AAGV;;AALqB,CAArB;AAMA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAL;AACE,+BACKK,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFhB;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD,C,CAGD","sourcesContent":["//evaluate any actions that are commited.\r\n// action have type\r\n// step 8: creating reducers\r\n//step 9 --> goto actions/types\r\n\r\nimport {FETCH_POSTS, NEW_POSTS} from '../actions/types';\r\n\r\n//create initial initialState\r\n//step 10: create initial state as an object\r\nconst initialState = {\r\n  items:[], //repersnt post coming from action fetch actions\r\n  item:{} //represent the single post we add\r\n}\r\n\r\n//evaluate what type are we dealing iwth\r\nexport default function(state = initialState, action) {\r\n  switch (action.type){\r\n    case FETCH_POSTS :\r\n      return {\r\n        ...state,\r\n        items: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n//step 11: create postAction.js\r\n"]},"metadata":{},"sourceType":"module"}